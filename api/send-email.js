import { Resend } from 'resend';
import admin from 'firebase-admin';

const resend = new Resend(process.env.RESEND_API_KEY);

// Initialize Firebase Admin
if (!admin.apps.length) {
  admin.initializeApp({
    credential: admin.credential.cert({
      projectId: process.env.FIREBASE_PROJECT_ID,
      privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,
    }),
    databaseURL: 'https://vinamilk-3c5bf-default-rtdb.asia-southeast1.firebasedatabase.app',
  });
}

const db = admin.database();

async function checkEmailExists(email, retries = 2) {
  for (let i = 0; i <= retries; i++) {
    try {
      const contestantsRef = db.ref('contestant');
      const snapshot = await contestantsRef.orderByChild('personalInfo/email').equalTo(email.toLowerCase()).once('value');
      return snapshot.exists();
    } catch (error) {
      console.error(`Firebase check attempt ${i + 1} failed:`, error);
      if (i === retries) {
        throw error; // Let it fail properly on final attempt
      }
      await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry
    }
  }
}

export default async function handler(req, res) {
  // Add CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');

  // Handle preflight OPTIONS request
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: { message: 'Method not allowed' } });
  }

  try {
    // Add detailed logging
    console.log('Request received:', {
      method: req.method,
      headers: req.headers,
      body: req.body
    });

    // Check if RESEND_API_KEY is configured
    if (!process.env.RESEND_API_KEY) {
      console.error('RESEND_API_KEY is not configured');
      return res.status(500).json({
        error: { message: 'Email service not configured' }
      });
    }

    // Check if Firebase credentials are configured
    if (!process.env.FIREBASE_PROJECT_ID || !process.env.FIREBASE_PRIVATE_KEY || !process.env.FIREBASE_CLIENT_EMAIL) {
      console.error('Firebase credentials not configured');
      return res.status(500).json({
        error: { message: 'Database service not configured' }
      });
    }

    const { name, email, language, fullname } = req.body;

    // Validate required fields
    if (!name || !email || !language || !fullname) {
      console.error('Missing required fields:', { name, email, language, fullname });
      return res.status(400).json({
        error: { message: 'Missing required fields: name, email, language, fullname are required' }
      });
    }

    // Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return res.status(400).json({
        error: { message: 'Invalid email format' }
      });
    }

    // Check if email already exists in Firebase
    console.log('Checking if email exists in Firebase:', email);
    const emailExists = await checkEmailExists(email);
    if (emailExists) {
      console.log('Email already used:', email);
      return res.status(400).json({
        error: { message: 'Email already used' }
      });
    }

    const isVietnamese = language === 'vi';

    const subject = isVietnamese
      ? 'X√°c nh·∫≠n ·ª©ng tuy·ªÉn - Ch∆∞∆°ng tr√¨nh GTP 2025'
      : 'Application Confirmation - Vinamilk Graduate Talent Program 2025';

    const htmlContent = `
<!DOCTYPE html>
<html lang="${isVietnamese ? 'vi' : 'en'}">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>${subject}</title>
</head>
<body style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background-color: #FFFFF1; margin: 0; padding: 20px; color: #333;">
  <div style="max-width: 600px; margin: auto; background-color: white; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">

    <!-- Header Banner -->
    <div style="background-color: #0213b0;">
      <img src="https://vinamilk-email-server.vercel.app/header.png" alt="Graduate Talent Program 2025" style="width: 100%; max-width: 600px; display: block;" />
    </div>

    <!-- Email Content -->
    <div style="padding: 30px;">
      <p style="font-size: 16px; margin-bottom: 20px;">${isVietnamese ? `Ch√†o ${name},` : `Dear ${name},`}</p>

      <p style="font-size: 14px; line-height: 1.6; margin-bottom: 20px;">
        ${isVietnamese
        ? 'C·∫£m ∆°n b·∫°n ƒë√£ ·ª©ng tuy·ªÉn v√†o Ch∆∞∆°ng tr√¨nh Graduate Talent Program 2025 c·ªßa Vinamilk. Ch√∫ng t√¥i r·∫•t vui m·ª´ng x√°c nh·∫≠n r·∫±ng h·ªì s∆° ·ª©ng tuy·ªÉn c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c n·ªôp th√†nh c√¥ng.'
        : 'Thank you for applying to Vinamilk Graduate Talent Program 2025. We\'re pleased to confirm that your application has been successfully submitted.'}
      </p>

      <!-- Application Details Box -->
      <div style="border: 2px solid #0213b0; padding: 20px; margin: 25px 0; border-radius: 4px;">
        <h3 style="margin-top: 0; margin-bottom: 15px; font-size: 16px; color: #0213b0; font-weight: bold;">${isVietnamese ? 'Th√¥ng tin ·ª©ng tuy·ªÉn' : 'Application Details'}</h3>
        <ul style="margin: 0; padding-left: 20px; font-size: 14px;">
          <li style="margin-bottom: 8px;"><strong>${isVietnamese ? 'H·ªç v√† t√™n:' : 'Full Name:'}</strong> ${fullname}</li>
          <li style="margin-bottom: 8px;"><strong>Email:</strong> ${email}</li>
          <li style="margin-bottom: 0;"><strong>${isVietnamese ? 'Th·ªùi gian n·ªôp:' : 'Submitted:'}</strong> ${new Date().toLocaleDateString(isVietnamese ? 'vi-VN' : 'en-US')}</li>
        </ul>
      </div>

      <!-- What happens next section -->
      <div style="margin: 25px 0;">
        <h4 style="margin-bottom: 15px; font-size: 14px; color: #333;">
          <span style="margin-right: 8px;">üîî</span>${isVietnamese ? 'C√°c b∆∞·ªõc ti·∫øp theo l√† g√¨?' : 'What happens next?'}
        </h4>
        
        <p style="font-size: 14px; line-height: 1.6; margin-bottom: 15px;">
          ${isVietnamese
        ? 'Nh·ªØng ·ª©ng vi√™n v∆∞·ª£t qua v√≤ng s√†ng l·ªçc s·∫Ω ti·∫øn t·ªõi b√†i Ki·ªÉm tra NƒÉng l·ª±c, ƒë∆∞·ª£c l√™n l·ªãch nh∆∞ sau:'
        : 'Candidates who pass the screening round will proceed to the Aptitude Test, scheduled as follows:'}
        </p>

        <ul style="font-size: 14px; margin: 15px 0; padding-left: 20px;">
          <li style="margin-bottom: 8px;">
            <strong>${isVietnamese ? 'Ki·ªÉm tra NƒÉng l·ª±c ‚Äì ƒê·ª£t 1:' : 'Aptitude Test ‚Äì Batch 1:'}</strong> 
            ${isVietnamese ? '21‚Äì23 th√°ng 6, 2025' : 'June 21‚Äì23, 2025'}
          </li>
          <li style="margin-bottom: 0;">
            <strong>${isVietnamese ? 'Ki·ªÉm tra NƒÉng l·ª±c ‚Äì ƒê·ª£t 2:' : 'Aptitude Test ‚Äì Batch 2:'}</strong> 
            ${isVietnamese ? '12‚Äì15 th√°ng 7, 2025' : 'July 12‚Äì15, 2025'}
          </li>
        </ul>

        <p style="font-size: 14px; color: #d9534f; margin-top: 15px;">
          <span style="margin-right: 5px;">üìç</span>
          ${isVietnamese
        ? 'Vui l√≤ng s·∫Øp x·∫øp l·ªãch c√° nh√¢n ƒë·ªÉ tham gia Ki·ªÉm tra NƒÉng l·ª±c v·ªõi Vinamilk trong th·ªùi gian t∆∞∆°ng ·ª©ng.'
        : 'Please arrange your personal schedule to participate in the Aptitude Test with Vinamilk during the respective period.'}
        </p>
      </div>

      <!-- Contact Information -->
      <p style="font-size: 14px; line-height: 1.6; margin: 25px 0 15px 0;">
        ${isVietnamese
        ? 'N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá qua:'
        : 'If you have any questions, feel free to reach out via:'}
      </p>

      <ul style="font-size: 14px; margin: 0 0 25px 0; padding-left: 20px;">
        <li style="margin-bottom: 8px;">
          <strong>Email:</strong> graduatetalent@vinamilk.com.vn
        </li>
        <li style="margin-bottom: 0;">
          <strong>Facebook:</strong> facebook.com/LifeAtVinamilk
        </li>
      </ul>

      <!-- Closing Message -->
      <p style="font-size: 14px; margin-bottom: 30px;">
        ${isVietnamese
        ? 'Ch√∫ng t√¥i ƒë√°nh gi√° cao s·ª± quan t√¢m c·ªßa b·∫°n v√† ch√∫c b·∫°n may m·∫Øn nh·∫•t!'
        : 'We appreciate your interest and wish you the very best!'}
      </p>

      <!-- Footer with Logo -->
      <div style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #e0e0e0;">
        <p style="font-size: 14px; margin-bottom: 10px;">
          ${isVietnamese ? 'Tr√¢n tr·ªçng,' : 'Warm regards,'}
        </p>
        
        <div style="margin: 20px 0;">
          <img src="https://vinamilk-email-server.vercel.app/logo.png" alt="Vinamilk Logo" style="height: 40px; margin-bottom: 10px;" />
          <p style="font-size: 14px; margin: 5px 0; font-weight: bold; color: #0213b0;">
            ${isVietnamese ? 'ƒê·ªôi t·ªï ch·ª©c Ch∆∞∆°ng tr√¨nh Graduate Talent Program' : 'Graduate Talent Program Organizing Team'}
          </p>
        </div>
        
        <div style="font-size: 12px; color: #777; margin-top: 15px;">
          <p style="margin: 2px 0;">10 Tan Trao St, Tan Phu Ward, District 7, Ho Chi Minh City, Vietnam</p>
          <p style="margin: 2px 0;">
            <a href="https://new.vinamilk.com.vn/about-us" style="color: #0213b0; text-decoration: none; margin-right: 10px;">Website</a>
            <a href="https://www.linkedin.com/company/vinamilk/" style="color: #0213b0; text-decoration: none; margin-right: 10px;">LinkedIn</a>
            <a href="https://www.facebook.com/vinamilkofficial" style="color: #0213b0; text-decoration: none;">Facebook</a>
          </p>
          <p style="margin: 10px 0 0 0; font-style: italic;">
            ${isVietnamese
        ? 'C·∫£m ∆°n b·∫°n ƒë√£ c√¢n nh·∫Øc t√°c ƒë·ªông m√¥i tr∆∞·ªùng khi in email n√†y.'
        : 'Thank you for considering the environmental impact of printing this email.'}
          </p>
        </div>
      </div>
    </div>
  </div>
</body>
</html>
`;

    console.log('Attempting to send email to:', email);

    const result = await resend.emails.send({
      from: 'Vinamilk Graduate Talent Program 2025 <noreply@vcogroup.com.vn>',
      to: [email],
      subject: subject,
      html: htmlContent,
    });

    console.log('Email sent successfully:', result);

    return res.status(200).json({
      success: true,
      messageId: result.data?.id
    });

  } catch (error) {
    console.error('Email sending error:', error);

    // Provide more specific error messages
    let errorMessage = 'Failed to send email';
    if (error.message) {
      errorMessage = error.message;
    }

    return res.status(500).json({
      error: {
        message: errorMessage,
        details: process.env.NODE_ENV === 'development' ? error.stack : undefined
      }
    });
  }
}